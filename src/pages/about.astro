---
import BUAA from "../components/icons/BUAA.svg";
import NUS from "../components/icons/NUS.svg";
import ReactIcon from "../components/icons/react.svg";
import Django from "../components/icons/django.svg";
import MySQL from "../components/icons/mysql.svg";
import Nginx from "../components/icons/nginx.svg";
import TypeScript from "../components/icons/typescript.svg";
import TailWindCSS from "../components/icons/tailwindcss.svg";
import TensorFlow from "../components/icons/tensorflow.svg";
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import { Link } from "lucide-react";
import { Badge } from "@/components/ui/badge";

const github = "https://github.com/acsoto/";

const projects = [
  {
    name: "AtTackCraft - A Minecraft Server",
    link: "https://www.mcac.cc",
    type: "Java Development and Server Maintenance",
    description: [
      "Independently maintained a Minecraft server for several years, with an average of 200+ daily active players, handling multiple major version updates and server migrations. Resisted malicious stress tests through reverse proxy and load balancing with Bungeecord, and dealt with DDoS attacks using elastic IPs and other cloud services.",
      "Developed several Bukkit-based plugins in Java, implementing database anti-injection, asynchronous read/write to avoid main thread blocking, and adding various game features such as title systems, guild systems, currency systems, shop systems, GUI interfaces, group chat bots, etc., and configured and maintained numerous third-party plugins to enhance gameplay.",
    ],
    relevantProjects: [
      "GuildManager",
      "MedalCabinet",
      "Gem",
      "GemShop",
      "AcShop",
      "ItemManager",
      "AC-channel-bot",
      "AC-mirai-plugin",
      "AtTackCraft-Core",
    ],
  },
  {
    name: "PetCharm",
    link: "https://github.com/PetCharm/petcharm_server",
    type: "Python Backend Developer",
    time: "2022.03 - 2022.07",
    description: [
      "Designed a complex database with 24 tables using MySQL, optimized indexes, normalized the relational schema to 4NF, and mapped the database using Django ORM. Developed RESTful APIs using the Django framework, documented them using Swagger, performed API testing with Postman, and handled frontend-backend integration.",
      "Deployed the production environment using uWSGI and Nginx, and containerized the application with Docker.",
      "Implemented features such as session management, email service, image object storage, posting and commenting, online veterinary consultation, dog walking route tracking, and BERT-based comment sentiment analysis.",
    ],
    relevantProjects: [
      "TakeawayDelivery",
    ],
  },
  {
    name: "Musician and Genre Influence Analysis",
    link: null,
    time: "2021.01",
    type: "Math Modeling | 2021 MCM/ICM Meritorious Winner",
    description: [
      "Built a weighted directed graph model, recursively calculated the similarity between artists and music genres using graph DFS and improved cosine similarity algorithms, and introduced a decay factor to reflect the diminishing effects of indirect influence, summarizing the topological network of musical influences.",
      "Cleaned and preprocessed the dataset, discovering a containment error in the official dataset during recursion and reported it. Evaluated the dispersion and weight variation of musical features using entropy, reflecting dynamic changes, and used Pearson correlation coefficient to identify the most influential features of leading musicians.",
    ],
  },
  {
    name: "SysY to P-Code Compiler",
    link: "https://github.com/acsoto/BUAA-Compiler",
    type: "Java Development",
    description: [
      "Performed lexical analysis, syntax analysis, error handling, and generated Pcode code using finite automata, recursive descent, and other methods",
    ],
  },
  {
    name: "MIPS-CPU",
    link: "https://github.com/acsoto/BUAA-Computer-Organization",
    type: "Verilog Development",
    description: [
      "Designed a finite state machine for lexical analysis, handled illegal characters, constructed an abstract syntax tree, and performed syntax analysis and error handling using recursive descent methods.",
      "Compiled SysY language into P-Code, optimized the code by reducing redundant labels, and eventually designed a corresponding virtual machine for interpretation and execution.",
    ],
  },
  {
    name: "Memo",
    link: "https://github.com/acsoto/Memo",
    type: "Swift Development",
    description: ["Developed iOS apps for diary, book, movie records"],
  },
  {
    name: "IoT Monitor",
    link: "https://github.com/acsoto/IoTMonitor",
    type: "Swift Development",
    description: [
      "IoT device control using Swift and SwiftUI. Used HTTP to call backend APIs for real-time information and control of IoT devices",
    ],
  },
];
---

<Layout title="About">
  <div class="prose dark:prose-invert max-w-none lg:prose-lg">
    <h2 class="text-center font-extrabold">Zhou Zihang</h2>
    <hr />

    <h2>Education</h2>
    <div class="flex flex-col gap-5">
      <div class="flex items-center gap-4">
        <div>
          <Image src={NUS} alt="NUS LOGO" />
        </div>
        <div>
          <div class="text-2xl font-extrabold">
            National University of Singapore
          </div>
          <div class="text-lg">MSc | Computer Engineering</div>
          <div class="text-lg text-gray-500">2024.1 - Present</div>
        </div>
      </div>

      <div class="flex items-center gap-4">
        <div>
          <Image src={BUAA} alt="BUAA LOGO" class="px-3" />
        </div>
        <div class="col-span-3">
          <div class="text-2xl font-extrabold">Beihang University</div>
          <div class="text-lg">BEng | Computer Science & Technology</div>
          <div class="text-lg text-gray-500">2019.9 - 2023.6</div>
        </div>
      </div>
    </div>

    <hr />

    <h2>Skills</h2>
    <div>
      <p>
        <b>Programming Languages:</b> Java, C, Python, JavaScript, HTML, Swift, Verilog.
      </p>
      <p>
        <b>Frameworks & Tools:</b>
        <span class="space-x-2">
          <Image
            src={ReactIcon}
            alt={"React"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={Django}
            alt={"Django"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={MySQL}
            alt={"MySQL"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={Nginx}
            alt={"Nginx"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={TypeScript}
            alt={"TypeScript"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={TailWindCSS}
            alt={"TailWindCSS"}
            class="h-6 w-6 inline align-middle"
          />
          <Image
            src={TensorFlow}
            alt={"TensorFlow"}
            class="h-6 w-6 inline align-middle"
          />
        </span>
      </p>
    </div>

    <hr />

    <h2>Projects</h2>
    {
      projects.map((project) => (
        <div>
          <h4>
            {project.link ? (
              <a class="not-prose" href={project.link} target="_blank">
                <div class="flex flex-row gap-1 hover:text-blue-400">
                  <div class="font-extrabold">{project.name}</div>
                  <div class="pt-2">
                    <Link size={14} />
                  </div>
                </div>
              </a>
            ) : (
              <div class="font-extrabold">{project.name}</div>
            )}
            <div class="text-zinc-500">{project.type}</div>
          </h4>
          <ul>
            {project.description.map((description) => (
              <li class="text-sm">{description}</li>
            ))}
            {project.relevantProjects ? (
              <li class="text-sm flex flex-row flex-wrap gap-2">
                Relevant Projects:
                {project.relevantProjects.map((proj) => (
                  <a href={github + proj} target="_blank">
                    <Badge>{proj}</Badge>
                  </a>
                ))}
              </li>
            ) : null}
          </ul>
        </div>
      ))
    }
  </div>
</Layout>
